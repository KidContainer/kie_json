name: CPPCheck

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CC: gcc-10
  CXX: g++-10

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Prepare for compiling CPPCheck
      working-directory: ${{github.workspace}}
      run: sudo apt update && sudo apt install wget && wget https://github.com/danmar/cppcheck/archive/2.7.tar.gz && tar â€“xvzf 2.7.tar.gz && rm -f 2.7.tar.gz

    - name: Compile CPPCheck
      working-directory: ${{github.workspace}}/cppcheck-2.7
      run: g++ -o cppcheck -std=c++11 -Iexternals -Iexternals/simplecpp -Iexternals/tinyxml2 -Iexternals/picojson -Ilib cli/*.cpp lib/*.cpp externals/simplecpp/simplecpp.cpp externals/tinyxml2/*.cpp

    - name: Install CPPCheck
      working-directory: ${{github.workspace}}
      run: cp ${{github.workspace}}/cppcheck-2.7/cppcheck . && rm -rf cppcheck-2.7

    - name: CPPCheck
      working-directory: ${{github.workspace}}
      run: ./cppcheck --enable=all --error-exitcode=1 -I include/ .